Terminals unused in grammar

    PUNCT
    PERCENT


Grammar

    0 $accept: prog $end

    1 prog: translation_unit
    2     | prog translation_unit

    3 translation_unit: function_definition
    4                 | declaration

    5 function_definition: type_specifier declarator declaration_list_opt compound_statement

    6 declaration_list_opt: declaration_list
    7                     | %empty

    8 declaration_list: declaration
    9                 | declaration_list declaration

   10 primary_expression: ID
   11                   | constants
   12                   | STRING_LITERAL
   13                   | LPAREN expression RPAREN

   14 STRING_LITERAL: SL

   15 constants: INT_CONSTANT
   16          | CHAR_CONSTANT

   17 INT_CONSTANT: INT_C

   18 CHAR_CONSTANT: CHAR_C

   19 postfix_expression: primary_expression
   20                   | postfix_expression LSBRACK expression RSBRACK
   21                   | postfix_expression LPAREN argument_expression_list_opt RPAREN
   22                   | postfix_expression ARROW ID

   23 argument_expression_list_opt: argument_expression_list
   24                             | %empty

   25 argument_expression_list: assignment_expression
   26                         | argument_expression_list COMMA assignment_expression

   27 unary_expression: postfix_expression
   28                 | unary_operator unary_expression

   29 unary_operator: AMP
   30               | AST
   31               | PLUS
   32               | MINUS
   33               | EXC

   34 multiplicative_expression: unary_expression
   35                          | multiplicative_expression AST unary_expression
   36                          | multiplicative_expression SLASH unary_expression

   37 additive_expression: multiplicative_expression
   38                    | additive_expression PLUS multiplicative_expression
   39                    | additive_expression MINUS multiplicative_expression

   40 relational_expression: additive_expression
   41                      | relational_expression LT additive_expression
   42                      | relational_expression GT additive_expression
   43                      | relational_expression LE additive_expression
   44                      | relational_expression GE additive_expression

   45 equality_expression: relational_expression
   46                    | equality_expression EQ relational_expression
   47                    | equality_expression NE relational_expression

   48 logical_and_expression: equality_expression
   49                       | logical_and_expression AND equality_expression

   50 logical_or_expression: logical_and_expression
   51                      | logical_or_expression OR logical_and_expression

   52 conditional_expression: logical_or_expression
   53                       | logical_or_expression QUES expression COLON conditional_expression

   54 assignment_expression: conditional_expression
   55                      | unary_expression EQUAL assignment_expression

   56 expression: assignment_expression

   57 declaration: type_specifier init_declarator SEMI

   58 init_declarator: declarator
   59                | declarator EQUAL initialiser

   60 type_specifier: INT
   61               | CHAR
   62               | VOID

   63 declarator: pointer_opt direct_declarator

   64 pointer_opt: AST
   65            | %empty

   66 direct_declarator: ID
   67                  | ID LSBRACK INT_CONSTANT RSBRACK
   68                  | ID LPAREN parameter_list_opt RPAREN

   69 parameter_list_opt: parameter_list
   70                   | %empty

   71 parameter_list: parameter_declaration
   72               | parameter_list COMMA parameter_declaration

   73 parameter_declaration: type_specifier pointer_opt ID_opt

   74 ID_opt: ID
   75       | %empty

   76 ID: IDENTIFIER

   77 initialiser: assignment_expression

   78 statement: compound_statement
   79          | expression_statement
   80          | selection_statement
   81          | iteration_statement
   82          | jump_statement

   83 compound_statement: LBRACE block_item_list_opt RBRACE

   84 block_item_list_opt: block_item_list
   85                    | %empty

   86 block_item_list: block_item
   87                | block_item_list block_item

   88 block_item: declaration
   89           | statement

   90 expression_statement: expression_opt SEMI

   91 selection_statement: IF LPAREN expression RPAREN statement
   92                    | IF LPAREN expression RPAREN statement ELSE statement

   93 iteration_statement: FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement

   94 jump_statement: RETURN expression_opt SEMI

   95 expression_opt: expression
   96               | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <strval> (258) 60
    CHAR <strval> (259) 61
    VOID <strval> (260) 62
    IF <strval> (261) 91 92
    ELSE <strval> (262) 92
    FOR <strval> (263) 93
    RETURN <strval> (264) 94
    IDENTIFIER <strval> (265) 76
    PUNCT <strval> (266)
    OR <strval> (267) 51
    AND <strval> (268) 49
    LE <strval> (269) 43
    GE <strval> (270) 44
    EQ <strval> (271) 46
    NE <strval> (272) 47
    ARROW <strval> (273) 22
    EQUAL <strval> (274) 55 59
    SEMI <strval> (275) 57 90 93 94
    LPAREN <strval> (276) 13 21 68 91 92 93
    RPAREN <strval> (277) 13 21 68 91 92 93
    LSBRACK <strval> (278) 20 67
    RSBRACK <strval> (279) 20 67
    COMMA <strval> (280) 26 72
    LBRACE <strval> (281) 83
    RBRACE <strval> (282) 83
    AST <strval> (283) 30 35 64
    AMP <strval> (284) 29
    PLUS <strval> (285) 31 38
    MINUS <strval> (286) 32 39
    PERCENT <strval> (287)
    EXC <strval> (288) 33
    SLASH <strval> (289) 36
    LT <strval> (290) 41
    GT <strval> (291) 42
    QUES <strval> (292) 53
    COLON <strval> (293) 53
    CHAR_C <strval> (294) 18
    SL <strval> (295) 14
    INT_C <strval> (296) 17
    LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    prog <strval> (44)
        on left: 1 2
        on right: 0 2
    translation_unit <strval> (45)
        on left: 3 4
        on right: 1 2
    function_definition <strval> (46)
        on left: 5
        on right: 3
    declaration_list_opt <strval> (47)
        on left: 6 7
        on right: 5
    declaration_list <strval> (48)
        on left: 8 9
        on right: 6 9
    primary_expression <strval> (49)
        on left: 10 11 12 13
        on right: 19
    STRING_LITERAL <strval> (50)
        on left: 14
        on right: 12
    constants <strval> (51)
        on left: 15 16
        on right: 11
    INT_CONSTANT <strval> (52)
        on left: 17
        on right: 15 67
    CHAR_CONSTANT <strval> (53)
        on left: 18
        on right: 16
    postfix_expression <strval> (54)
        on left: 19 20 21 22
        on right: 20 21 22 27
    argument_expression_list_opt <strval> (55)
        on left: 23 24
        on right: 21
    argument_expression_list <strval> (56)
        on left: 25 26
        on right: 23 26
    unary_expression <strval> (57)
        on left: 27 28
        on right: 28 34 35 36 55
    unary_operator (58)
        on left: 29 30 31 32 33
        on right: 28
    multiplicative_expression <strval> (59)
        on left: 34 35 36
        on right: 35 36 37 38 39
    additive_expression <strval> (60)
        on left: 37 38 39
        on right: 38 39 40 41 42 43 44
    relational_expression <strval> (61)
        on left: 40 41 42 43 44
        on right: 41 42 43 44 45 46 47
    equality_expression <strval> (62)
        on left: 45 46 47
        on right: 46 47 48 49
    logical_and_expression <strval> (63)
        on left: 48 49
        on right: 49 50 51
    logical_or_expression <strval> (64)
        on left: 50 51
        on right: 51 52 53
    conditional_expression <strval> (65)
        on left: 52 53
        on right: 53 54
    assignment_expression <strval> (66)
        on left: 54 55
        on right: 25 26 55 56 77
    expression <strval> (67)
        on left: 56
        on right: 13 20 53 91 92 95
    declaration <strval> (68)
        on left: 57
        on right: 4 8 9 88
    init_declarator <strval> (69)
        on left: 58 59
        on right: 57
    type_specifier <strval> (70)
        on left: 60 61 62
        on right: 5 57 73
    declarator <strval> (71)
        on left: 63
        on right: 5 58 59
    pointer_opt (72)
        on left: 64 65
        on right: 63 73
    direct_declarator <strval> (73)
        on left: 66 67 68
        on right: 63
    parameter_list_opt <strval> (74)
        on left: 69 70
        on right: 68
    parameter_list <strval> (75)
        on left: 71 72
        on right: 69 72
    parameter_declaration <strval> (76)
        on left: 73
        on right: 71 72
    ID_opt <strval> (77)
        on left: 74 75
        on right: 73
    ID <strval> (78)
        on left: 76
        on right: 10 22 66 67 68 74
    initialiser <strval> (79)
        on left: 77
        on right: 59
    statement <strval> (80)
        on left: 78 79 80 81 82
        on right: 89 91 92 93
    compound_statement <strval> (81)
        on left: 83
        on right: 5 78
    block_item_list_opt <strval> (82)
        on left: 84 85
        on right: 83
    block_item_list <strval> (83)
        on left: 86 87
        on right: 84 87
    block_item <strval> (84)
        on left: 88 89
        on right: 86 87
    expression_statement <strval> (85)
        on left: 90
        on right: 79
    selection_statement <strval> (86)
        on left: 91 92
        on right: 80
    iteration_statement <strval> (87)
        on left: 93
        on right: 81
    jump_statement <strval> (88)
        on left: 94
        on right: 82
    expression_opt <strval> (89)
        on left: 95 96
        on right: 90 93 94


State 0

    0 $accept: . prog $end

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    prog                 go to state 4
    translation_unit     go to state 5
    function_definition  go to state 6
    declaration          go to state 7
    type_specifier       go to state 8


State 1

   60 type_specifier: INT .

    $default  reduce using rule 60 (type_specifier)


State 2

   61 type_specifier: CHAR .

    $default  reduce using rule 61 (type_specifier)


State 3

   62 type_specifier: VOID .

    $default  reduce using rule 62 (type_specifier)


State 4

    0 $accept: prog . $end
    2 prog: prog . translation_unit

    $end  shift, and go to state 9
    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    translation_unit     go to state 10
    function_definition  go to state 6
    declaration          go to state 7
    type_specifier       go to state 8


State 5

    1 prog: translation_unit .

    $default  reduce using rule 1 (prog)


State 6

    3 translation_unit: function_definition .

    $default  reduce using rule 3 (translation_unit)


State 7

    4 translation_unit: declaration .

    $default  reduce using rule 4 (translation_unit)


State 8

    5 function_definition: type_specifier . declarator declaration_list_opt compound_statement
   57 declaration: type_specifier . init_declarator SEMI

    AST  shift, and go to state 11

    $default  reduce using rule 65 (pointer_opt)

    init_declarator  go to state 12
    declarator       go to state 13
    pointer_opt      go to state 14


State 9

    0 $accept: prog $end .

    $default  accept


State 10

    2 prog: prog translation_unit .

    $default  reduce using rule 2 (prog)


State 11

   64 pointer_opt: AST .

    $default  reduce using rule 64 (pointer_opt)


State 12

   57 declaration: type_specifier init_declarator . SEMI

    SEMI  shift, and go to state 15


State 13

    5 function_definition: type_specifier declarator . declaration_list_opt compound_statement
   58 init_declarator: declarator .
   59                | declarator . EQUAL initialiser

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    VOID   shift, and go to state 3
    EQUAL  shift, and go to state 16

    SEMI      reduce using rule 58 (init_declarator)
    $default  reduce using rule 7 (declaration_list_opt)

    declaration_list_opt  go to state 17
    declaration_list      go to state 18
    declaration           go to state 19
    type_specifier        go to state 20


State 14

   63 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 21

    direct_declarator  go to state 22
    ID                 go to state 23


State 15

   57 declaration: type_specifier init_declarator SEMI .

    $default  reduce using rule 57 (declaration)


State 16

   59 init_declarator: declarator EQUAL . initialiser

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 48
    ID                         go to state 49
    initialiser                go to state 50


State 17

    5 function_definition: type_specifier declarator declaration_list_opt . compound_statement

    LBRACE  shift, and go to state 51

    compound_statement  go to state 52


State 18

    6 declaration_list_opt: declaration_list .
    9 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 6 (declaration_list_opt)

    declaration     go to state 53
    type_specifier  go to state 20


State 19

    8 declaration_list: declaration .

    $default  reduce using rule 8 (declaration_list)


State 20

   57 declaration: type_specifier . init_declarator SEMI

    AST  shift, and go to state 11

    $default  reduce using rule 65 (pointer_opt)

    init_declarator  go to state 12
    declarator       go to state 54
    pointer_opt      go to state 14


State 21

   76 ID: IDENTIFIER .

    $default  reduce using rule 76 (ID)


State 22

   63 declarator: pointer_opt direct_declarator .

    $default  reduce using rule 63 (declarator)


State 23

   66 direct_declarator: ID .
   67                  | ID . LSBRACK INT_CONSTANT RSBRACK
   68                  | ID . LPAREN parameter_list_opt RPAREN

    LPAREN   shift, and go to state 55
    LSBRACK  shift, and go to state 56

    $default  reduce using rule 66 (direct_declarator)


State 24

   13 primary_expression: LPAREN . expression RPAREN

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 58
    ID                         go to state 49


State 25

   30 unary_operator: AST .

    $default  reduce using rule 30 (unary_operator)


State 26

   29 unary_operator: AMP .

    $default  reduce using rule 29 (unary_operator)


State 27

   31 unary_operator: PLUS .

    $default  reduce using rule 31 (unary_operator)


State 28

   32 unary_operator: MINUS .

    $default  reduce using rule 32 (unary_operator)


State 29

   33 unary_operator: EXC .

    $default  reduce using rule 33 (unary_operator)


State 30

   18 CHAR_CONSTANT: CHAR_C .

    $default  reduce using rule 18 (CHAR_CONSTANT)


State 31

   14 STRING_LITERAL: SL .

    $default  reduce using rule 14 (STRING_LITERAL)


State 32

   17 INT_CONSTANT: INT_C .

    $default  reduce using rule 17 (INT_CONSTANT)


State 33

   19 postfix_expression: primary_expression .

    $default  reduce using rule 19 (postfix_expression)


State 34

   12 primary_expression: STRING_LITERAL .

    $default  reduce using rule 12 (primary_expression)


State 35

   11 primary_expression: constants .

    $default  reduce using rule 11 (primary_expression)


State 36

   15 constants: INT_CONSTANT .

    $default  reduce using rule 15 (constants)


State 37

   16 constants: CHAR_CONSTANT .

    $default  reduce using rule 16 (constants)


State 38

   20 postfix_expression: postfix_expression . LSBRACK expression RSBRACK
   21                   | postfix_expression . LPAREN argument_expression_list_opt RPAREN
   22                   | postfix_expression . ARROW ID
   27 unary_expression: postfix_expression .

    ARROW    shift, and go to state 59
    LPAREN   shift, and go to state 60
    LSBRACK  shift, and go to state 61

    $default  reduce using rule 27 (unary_expression)


State 39

   34 multiplicative_expression: unary_expression .
   55 assignment_expression: unary_expression . EQUAL assignment_expression

    EQUAL  shift, and go to state 62

    $default  reduce using rule 34 (multiplicative_expression)


State 40

   28 unary_expression: unary_operator . unary_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression  go to state 33
    STRING_LITERAL      go to state 34
    constants           go to state 35
    INT_CONSTANT        go to state 36
    CHAR_CONSTANT       go to state 37
    postfix_expression  go to state 38
    unary_expression    go to state 63
    unary_operator      go to state 40
    ID                  go to state 49


State 41

   35 multiplicative_expression: multiplicative_expression . AST unary_expression
   36                          | multiplicative_expression . SLASH unary_expression
   37 additive_expression: multiplicative_expression .

    AST    shift, and go to state 64
    SLASH  shift, and go to state 65

    $default  reduce using rule 37 (additive_expression)


State 42

   38 additive_expression: additive_expression . PLUS multiplicative_expression
   39                    | additive_expression . MINUS multiplicative_expression
   40 relational_expression: additive_expression .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 40 (relational_expression)


State 43

   41 relational_expression: relational_expression . LT additive_expression
   42                      | relational_expression . GT additive_expression
   43                      | relational_expression . LE additive_expression
   44                      | relational_expression . GE additive_expression
   45 equality_expression: relational_expression .

    LE  shift, and go to state 68
    GE  shift, and go to state 69
    LT  shift, and go to state 70
    GT  shift, and go to state 71

    $default  reduce using rule 45 (equality_expression)


State 44

   46 equality_expression: equality_expression . EQ relational_expression
   47                    | equality_expression . NE relational_expression
   48 logical_and_expression: equality_expression .

    EQ  shift, and go to state 72
    NE  shift, and go to state 73

    $default  reduce using rule 48 (logical_and_expression)


State 45

   49 logical_and_expression: logical_and_expression . AND equality_expression
   50 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 74

    $default  reduce using rule 50 (logical_or_expression)


State 46

   51 logical_or_expression: logical_or_expression . OR logical_and_expression
   52 conditional_expression: logical_or_expression .
   53                       | logical_or_expression . QUES expression COLON conditional_expression

    OR    shift, and go to state 75
    QUES  shift, and go to state 76

    $default  reduce using rule 52 (conditional_expression)


State 47

   54 assignment_expression: conditional_expression .

    $default  reduce using rule 54 (assignment_expression)


State 48

   77 initialiser: assignment_expression .

    $default  reduce using rule 77 (initialiser)


State 49

   10 primary_expression: ID .

    $default  reduce using rule 10 (primary_expression)


State 50

   59 init_declarator: declarator EQUAL initialiser .

    $default  reduce using rule 59 (init_declarator)


State 51

   83 compound_statement: LBRACE . block_item_list_opt RBRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    VOID        shift, and go to state 3
    IF          shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79
    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    LBRACE      shift, and go to state 51
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    SEMI      reduce using rule 96 (expression_opt)
    $default  reduce using rule 85 (block_item_list_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    declaration                go to state 81
    type_specifier             go to state 20
    ID                         go to state 49
    statement                  go to state 82
    compound_statement         go to state 83
    block_item_list_opt        go to state 84
    block_item_list            go to state 85
    block_item                 go to state 86
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90
    expression_opt             go to state 91


State 52

    5 function_definition: type_specifier declarator declaration_list_opt compound_statement .

    $default  reduce using rule 5 (function_definition)


State 53

    9 declaration_list: declaration_list declaration .

    $default  reduce using rule 9 (declaration_list)


State 54

   58 init_declarator: declarator .
   59                | declarator . EQUAL initialiser

    EQUAL  shift, and go to state 16

    $default  reduce using rule 58 (init_declarator)


State 55

   68 direct_declarator: ID LPAREN . parameter_list_opt RPAREN

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 70 (parameter_list_opt)

    type_specifier         go to state 92
    parameter_list_opt     go to state 93
    parameter_list         go to state 94
    parameter_declaration  go to state 95


State 56

   67 direct_declarator: ID LSBRACK . INT_CONSTANT RSBRACK

    INT_C  shift, and go to state 32

    INT_CONSTANT  go to state 96


State 57

   56 expression: assignment_expression .

    $default  reduce using rule 56 (expression)


State 58

   13 primary_expression: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 97


State 59

   22 postfix_expression: postfix_expression ARROW . ID

    IDENTIFIER  shift, and go to state 21

    ID  go to state 98


State 60

   21 postfix_expression: postfix_expression LPAREN . argument_expression_list_opt RPAREN

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 24 (argument_expression_list_opt)

    primary_expression            go to state 33
    STRING_LITERAL                go to state 34
    constants                     go to state 35
    INT_CONSTANT                  go to state 36
    CHAR_CONSTANT                 go to state 37
    postfix_expression            go to state 38
    argument_expression_list_opt  go to state 99
    argument_expression_list      go to state 100
    unary_expression              go to state 39
    unary_operator                go to state 40
    multiplicative_expression     go to state 41
    additive_expression           go to state 42
    relational_expression         go to state 43
    equality_expression           go to state 44
    logical_and_expression        go to state 45
    logical_or_expression         go to state 46
    conditional_expression        go to state 47
    assignment_expression         go to state 101
    ID                            go to state 49


State 61

   20 postfix_expression: postfix_expression LSBRACK . expression RSBRACK

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 102
    ID                         go to state 49


State 62

   55 assignment_expression: unary_expression EQUAL . assignment_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 103
    ID                         go to state 49


State 63

   28 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 28 (unary_expression)


State 64

   35 multiplicative_expression: multiplicative_expression AST . unary_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression  go to state 33
    STRING_LITERAL      go to state 34
    constants           go to state 35
    INT_CONSTANT        go to state 36
    CHAR_CONSTANT       go to state 37
    postfix_expression  go to state 38
    unary_expression    go to state 104
    unary_operator      go to state 40
    ID                  go to state 49


State 65

   36 multiplicative_expression: multiplicative_expression SLASH . unary_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression  go to state 33
    STRING_LITERAL      go to state 34
    constants           go to state 35
    INT_CONSTANT        go to state 36
    CHAR_CONSTANT       go to state 37
    postfix_expression  go to state 38
    unary_expression    go to state 105
    unary_operator      go to state 40
    ID                  go to state 49


State 66

   38 additive_expression: additive_expression PLUS . multiplicative_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 107
    ID                         go to state 49


State 67

   39 additive_expression: additive_expression MINUS . multiplicative_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 108
    ID                         go to state 49


State 68

   43 relational_expression: relational_expression LE . additive_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 109
    ID                         go to state 49


State 69

   44 relational_expression: relational_expression GE . additive_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 110
    ID                         go to state 49


State 70

   41 relational_expression: relational_expression LT . additive_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 111
    ID                         go to state 49


State 71

   42 relational_expression: relational_expression GT . additive_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 112
    ID                         go to state 49


State 72

   46 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 113
    ID                         go to state 49


State 73

   47 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 114
    ID                         go to state 49


State 74

   49 logical_and_expression: logical_and_expression AND . equality_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 115
    ID                         go to state 49


State 75

   51 logical_or_expression: logical_or_expression OR . logical_and_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 116
    ID                         go to state 49


State 76

   53 conditional_expression: logical_or_expression QUES . expression COLON conditional_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 117
    ID                         go to state 49


State 77

   91 selection_statement: IF . LPAREN expression RPAREN statement
   92                    | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 118


State 78

   93 iteration_statement: FOR . LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement

    LPAREN  shift, and go to state 119


State 79

   94 jump_statement: RETURN . expression_opt SEMI

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 96 (expression_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    ID                         go to state 49
    expression_opt             go to state 120


State 80

   95 expression_opt: expression .

    $default  reduce using rule 95 (expression_opt)


State 81

   88 block_item: declaration .

    $default  reduce using rule 88 (block_item)


State 82

   89 block_item: statement .

    $default  reduce using rule 89 (block_item)


State 83

   78 statement: compound_statement .

    $default  reduce using rule 78 (statement)


State 84

   83 compound_statement: LBRACE block_item_list_opt . RBRACE

    RBRACE  shift, and go to state 121


State 85

   84 block_item_list_opt: block_item_list .
   87 block_item_list: block_item_list . block_item

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    VOID        shift, and go to state 3
    IF          shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79
    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    LBRACE      shift, and go to state 51
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    SEMI      reduce using rule 96 (expression_opt)
    $default  reduce using rule 84 (block_item_list_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    declaration                go to state 81
    type_specifier             go to state 20
    ID                         go to state 49
    statement                  go to state 82
    compound_statement         go to state 83
    block_item                 go to state 122
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90
    expression_opt             go to state 91


State 86

   86 block_item_list: block_item .

    $default  reduce using rule 86 (block_item_list)


State 87

   79 statement: expression_statement .

    $default  reduce using rule 79 (statement)


State 88

   80 statement: selection_statement .

    $default  reduce using rule 80 (statement)


State 89

   81 statement: iteration_statement .

    $default  reduce using rule 81 (statement)


State 90

   82 statement: jump_statement .

    $default  reduce using rule 82 (statement)


State 91

   90 expression_statement: expression_opt . SEMI

    SEMI  shift, and go to state 123


State 92

   73 parameter_declaration: type_specifier . pointer_opt ID_opt

    AST  shift, and go to state 11

    $default  reduce using rule 65 (pointer_opt)

    pointer_opt  go to state 124


State 93

   68 direct_declarator: ID LPAREN parameter_list_opt . RPAREN

    RPAREN  shift, and go to state 125


State 94

   69 parameter_list_opt: parameter_list .
   72 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 126

    $default  reduce using rule 69 (parameter_list_opt)


State 95

   71 parameter_list: parameter_declaration .

    $default  reduce using rule 71 (parameter_list)


State 96

   67 direct_declarator: ID LSBRACK INT_CONSTANT . RSBRACK

    RSBRACK  shift, and go to state 127


State 97

   13 primary_expression: LPAREN expression RPAREN .

    $default  reduce using rule 13 (primary_expression)


State 98

   22 postfix_expression: postfix_expression ARROW ID .

    $default  reduce using rule 22 (postfix_expression)


State 99

   21 postfix_expression: postfix_expression LPAREN argument_expression_list_opt . RPAREN

    RPAREN  shift, and go to state 128


State 100

   23 argument_expression_list_opt: argument_expression_list .
   26 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 129

    $default  reduce using rule 23 (argument_expression_list_opt)


State 101

   25 argument_expression_list: assignment_expression .

    $default  reduce using rule 25 (argument_expression_list)


State 102

   20 postfix_expression: postfix_expression LSBRACK expression . RSBRACK

    RSBRACK  shift, and go to state 130


State 103

   55 assignment_expression: unary_expression EQUAL assignment_expression .

    $default  reduce using rule 55 (assignment_expression)


State 104

   35 multiplicative_expression: multiplicative_expression AST unary_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 105

   36 multiplicative_expression: multiplicative_expression SLASH unary_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 106

   34 multiplicative_expression: unary_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 107

   35 multiplicative_expression: multiplicative_expression . AST unary_expression
   36                          | multiplicative_expression . SLASH unary_expression
   38 additive_expression: additive_expression PLUS multiplicative_expression .

    AST    shift, and go to state 64
    SLASH  shift, and go to state 65

    $default  reduce using rule 38 (additive_expression)


State 108

   35 multiplicative_expression: multiplicative_expression . AST unary_expression
   36                          | multiplicative_expression . SLASH unary_expression
   39 additive_expression: additive_expression MINUS multiplicative_expression .

    AST    shift, and go to state 64
    SLASH  shift, and go to state 65

    $default  reduce using rule 39 (additive_expression)


State 109

   38 additive_expression: additive_expression . PLUS multiplicative_expression
   39                    | additive_expression . MINUS multiplicative_expression
   43 relational_expression: relational_expression LE additive_expression .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 43 (relational_expression)


State 110

   38 additive_expression: additive_expression . PLUS multiplicative_expression
   39                    | additive_expression . MINUS multiplicative_expression
   44 relational_expression: relational_expression GE additive_expression .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 44 (relational_expression)


State 111

   38 additive_expression: additive_expression . PLUS multiplicative_expression
   39                    | additive_expression . MINUS multiplicative_expression
   41 relational_expression: relational_expression LT additive_expression .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 41 (relational_expression)


State 112

   38 additive_expression: additive_expression . PLUS multiplicative_expression
   39                    | additive_expression . MINUS multiplicative_expression
   42 relational_expression: relational_expression GT additive_expression .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 42 (relational_expression)


State 113

   41 relational_expression: relational_expression . LT additive_expression
   42                      | relational_expression . GT additive_expression
   43                      | relational_expression . LE additive_expression
   44                      | relational_expression . GE additive_expression
   46 equality_expression: equality_expression EQ relational_expression .

    LE  shift, and go to state 68
    GE  shift, and go to state 69
    LT  shift, and go to state 70
    GT  shift, and go to state 71

    $default  reduce using rule 46 (equality_expression)


State 114

   41 relational_expression: relational_expression . LT additive_expression
   42                      | relational_expression . GT additive_expression
   43                      | relational_expression . LE additive_expression
   44                      | relational_expression . GE additive_expression
   47 equality_expression: equality_expression NE relational_expression .

    LE  shift, and go to state 68
    GE  shift, and go to state 69
    LT  shift, and go to state 70
    GT  shift, and go to state 71

    $default  reduce using rule 47 (equality_expression)


State 115

   46 equality_expression: equality_expression . EQ relational_expression
   47                    | equality_expression . NE relational_expression
   49 logical_and_expression: logical_and_expression AND equality_expression .

    EQ  shift, and go to state 72
    NE  shift, and go to state 73

    $default  reduce using rule 49 (logical_and_expression)


State 116

   49 logical_and_expression: logical_and_expression . AND equality_expression
   51 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 74

    $default  reduce using rule 51 (logical_or_expression)


State 117

   53 conditional_expression: logical_or_expression QUES expression . COLON conditional_expression

    COLON  shift, and go to state 131


State 118

   91 selection_statement: IF LPAREN . expression RPAREN statement
   92                    | IF LPAREN . expression RPAREN statement ELSE statement

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 132
    ID                         go to state 49


State 119

   93 iteration_statement: FOR LPAREN . expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 96 (expression_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    ID                         go to state 49
    expression_opt             go to state 133


State 120

   94 jump_statement: RETURN expression_opt . SEMI

    SEMI  shift, and go to state 134


State 121

   83 compound_statement: LBRACE block_item_list_opt RBRACE .

    $default  reduce using rule 83 (compound_statement)


State 122

   87 block_item_list: block_item_list block_item .

    $default  reduce using rule 87 (block_item_list)


State 123

   90 expression_statement: expression_opt SEMI .

    $default  reduce using rule 90 (expression_statement)


State 124

   73 parameter_declaration: type_specifier pointer_opt . ID_opt

    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 75 (ID_opt)

    ID_opt  go to state 135
    ID      go to state 136


State 125

   68 direct_declarator: ID LPAREN parameter_list_opt RPAREN .

    $default  reduce using rule 68 (direct_declarator)


State 126

   72 parameter_list: parameter_list COMMA . parameter_declaration

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier         go to state 92
    parameter_declaration  go to state 137


State 127

   67 direct_declarator: ID LSBRACK INT_CONSTANT RSBRACK .

    $default  reduce using rule 67 (direct_declarator)


State 128

   21 postfix_expression: postfix_expression LPAREN argument_expression_list_opt RPAREN .

    $default  reduce using rule 21 (postfix_expression)


State 129

   26 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 138
    ID                         go to state 49


State 130

   20 postfix_expression: postfix_expression LSBRACK expression RSBRACK .

    $default  reduce using rule 20 (postfix_expression)


State 131

   53 conditional_expression: logical_or_expression QUES expression COLON . conditional_expression

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 106
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 139
    ID                         go to state 49


State 132

   91 selection_statement: IF LPAREN expression . RPAREN statement
   92                    | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 140


State 133

   93 iteration_statement: FOR LPAREN expression_opt . SEMI expression_opt SEMI expression_opt RPAREN statement

    SEMI  shift, and go to state 141


State 134

   94 jump_statement: RETURN expression_opt SEMI .

    $default  reduce using rule 94 (jump_statement)


State 135

   73 parameter_declaration: type_specifier pointer_opt ID_opt .

    $default  reduce using rule 73 (parameter_declaration)


State 136

   74 ID_opt: ID .

    $default  reduce using rule 74 (ID_opt)


State 137

   72 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 72 (parameter_list)


State 138

   26 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 26 (argument_expression_list)


State 139

   53 conditional_expression: logical_or_expression QUES expression COLON conditional_expression .

    $default  reduce using rule 53 (conditional_expression)


State 140

   91 selection_statement: IF LPAREN expression RPAREN . statement
   92                    | IF LPAREN expression RPAREN . statement ELSE statement

    IF          shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79
    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    LBRACE      shift, and go to state 51
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 96 (expression_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    ID                         go to state 49
    statement                  go to state 142
    compound_statement         go to state 83
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90
    expression_opt             go to state 91


State 141

   93 iteration_statement: FOR LPAREN expression_opt SEMI . expression_opt SEMI expression_opt RPAREN statement

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 96 (expression_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    ID                         go to state 49
    expression_opt             go to state 143


State 142

   91 selection_statement: IF LPAREN expression RPAREN statement .
   92                    | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 144

    $default  reduce using rule 91 (selection_statement)


State 143

   93 iteration_statement: FOR LPAREN expression_opt SEMI expression_opt . SEMI expression_opt RPAREN statement

    SEMI  shift, and go to state 145


State 144

   92 selection_statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF          shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79
    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    LBRACE      shift, and go to state 51
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 96 (expression_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    ID                         go to state 49
    statement                  go to state 146
    compound_statement         go to state 83
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90
    expression_opt             go to state 91


State 145

   93 iteration_statement: FOR LPAREN expression_opt SEMI expression_opt SEMI . expression_opt RPAREN statement

    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 96 (expression_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    ID                         go to state 49
    expression_opt             go to state 147


State 146

   92 selection_statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 92 (selection_statement)


State 147

   93 iteration_statement: FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt . RPAREN statement

    RPAREN  shift, and go to state 148


State 148

   93 iteration_statement: FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN . statement

    IF          shift, and go to state 77
    FOR         shift, and go to state 78
    RETURN      shift, and go to state 79
    IDENTIFIER  shift, and go to state 21
    LPAREN      shift, and go to state 24
    LBRACE      shift, and go to state 51
    AST         shift, and go to state 25
    AMP         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28
    EXC         shift, and go to state 29
    CHAR_C      shift, and go to state 30
    SL          shift, and go to state 31
    INT_C       shift, and go to state 32

    $default  reduce using rule 96 (expression_opt)

    primary_expression         go to state 33
    STRING_LITERAL             go to state 34
    constants                  go to state 35
    INT_CONSTANT               go to state 36
    CHAR_CONSTANT              go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    logical_and_expression     go to state 45
    logical_or_expression      go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 57
    expression                 go to state 80
    ID                         go to state 49
    statement                  go to state 149
    compound_statement         go to state 83
    expression_statement       go to state 87
    selection_statement        go to state 88
    iteration_statement        go to state 89
    jump_statement             go to state 90
    expression_opt             go to state 91


State 149

   93 iteration_statement: FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .

    $default  reduce using rule 93 (iteration_statement)
